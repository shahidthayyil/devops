{{- $global := .Values.global -}}
{{- $namespace := .Values.global.namespace -}}
{{- $tlsCertificateARN := .Values.global.tlsCertificateARN -}}
{{- $ingressSubnets := .Values.global.ingressSubnets -}}
{{- $ingressSecurityGroups := .Values.global.ingressSecurityGroups -}}
{{- $ALBRuleOrder := .Values.global.ALBRuleOrder -}}
{{- $s3bucketALBlogs := .Values.global.s3bucketALBlogs -}}
{{- range $key, $values := .Values.deployments }}
{{- range $msgServiceDetails := $values }}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: cluster-{{$namespace}}-{{$msgServiceDetails.deploymentName}}
  namespace: {{ $namespace }}
  annotations:
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTPS":443}]'
#   alb.ingress.kubernetes.io/actions.ssl-redirect: '{"Type": "redirect", "RedirectConfig": { "Protocol": "HTTPS", "Port": "443", "StatusCode": "HTTP_301"}}'
    alb.ingress.kubernetes.io/scheme: internal
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/certificate-arn: {{ $tlsCertificateARN }}
    alb.ingress.kubernetes.io/healthcheck-path: {{ $msgServiceDetails.healthCheckUrl }}
    alb.ingress.kubernetes.io/healthcheck-interval-seconds: "5"
    alb.ingress.kubernetes.io/healthcheck-timeout-seconds: "2"
    alb.ingress.kubernetes.io/healthy-threshold-count: "2"
    alb.ingress.kubernetes.io/unhealthy-threshold-count: "2"
    alb.ingress.kubernetes.io/load-balancer-attributes: idle_timeout.timeout_seconds=150
    alb.ingress.kubernetes.io/group.name: {{ $global.ALBName }}
    alb.ingress.kubernetes.io/target-group-attributes: stickiness.enabled={{$msgServiceDetails.stickiness}},stickiness.lb_cookie.duration_seconds=86400
    alb.ingress.kubernetes.io/ssl-policy: {{ $global.tlsCipherPolicy }}
    alb.ingress.kubernetes.io/subnets: {{ $ingressSubnets }}
# Take security group values only if its specified in values.yaml
    {{- if ne $ingressSecurityGroups "" }}
    alb.ingress.kubernetes.io/security-groups: {{ $ingressSecurityGroups }}
    alb.ingress.kubernetes.io/manage-backend-security-group-rules: "false"
    {{- end }}
# to push alb logs to s3
    {{- if ne $s3bucketALBlogs "" }}
    alb.ingress.kubernetes.io/load-balancer-attributes: access_logs.s3.enabled=true,access_logs.s3.bucket={{ $s3bucketALBlogs }},access_logs.s3.prefix=lb-{{ $s3bucketALBlogs }}
    {{- end }}
# Take ALBRuleOrder values only if its specified in values.yaml, to implement priority for rules
    {{- if ne $ALBRuleOrder "" }}
    alb.ingress.kubernetes.io/group.order: {{ $msgServiceDetails.ALBRuleOrder }}
    {{- end }}
spec:
  ingressClassName: alb
  rules:
  - host: {{ $global.hostUrl }}
    http:
      paths:
      {{- range $urlPath := $msgServiceDetails.appUrlPath }}
      - path: {{$urlPath}}
        pathType: Prefix
        backend:
          service:
            name: {{$msgServiceDetails.deploymentName}}
            port: 
              number: 5000
      {{- end }}
{{- end }}
---
{{- end }}
      
---

{{- range $key, $values := .Values.deployments }}
{{- range $msgServiceDetails := $values }}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: cluster-{{$namespace}}-{{$msgServiceDetails.deploymentName}}-sslredirect
  namespace: {{ $namespace }}
  annotations:
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}]'
    alb.ingress.kubernetes.io/actions.ssl-redirect: '{"Type": "redirect", "RedirectConfig": { "Protocol": "HTTPS", "Port": "443", "StatusCode": "HTTP_301"}}'
    alb.ingress.kubernetes.io/scheme: internal
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/group.name: {{ $global.ALBName }}
    alb.ingress.kubernetes.io/healthcheck-path: {{ $msgServiceDetails.healthCheckUrl }}
    alb.ingress.kubernetes.io/healthcheck-interval-seconds: "5"
    alb.ingress.kubernetes.io/healthcheck-timeout-seconds: "2"
    alb.ingress.kubernetes.io/healthy-threshold-count: "2"
    alb.ingress.kubernetes.io/unhealthy-threshold-count: "2"
    alb.ingress.kubernetes.io/load-balancer-attributes: idle_timeout.timeout_seconds=150
    alb.ingress.kubernetes.io/subnets: {{ $ingressSubnets }}
# Take security group values only if its specified in values.yaml
    {{- if ne $ingressSecurityGroups "" }}
    alb.ingress.kubernetes.io/security-groups: {{ $ingressSecurityGroups }}
    alb.ingress.kubernetes.io/manage-backend-security-group-rules: "false"
    {{- end }}
# to push alb logs to s3
    {{- if ne $s3bucketALBlogs "" }}
    alb.ingress.kubernetes.io/load-balancer-attributes: access_logs.s3.enabled=true,access_logs.s3.bucket={{ $s3bucketALBlogs }},access_logs.s3.prefix=lb-{{ $s3bucketALBlogs }}
    {{- end }}
# Take ALBRuleOrder values only if its specified in values.yaml, to implement priority for rules
    {{- if ne $ALBRuleOrder "" }}
    alb.ingress.kubernetes.io/group.order: {{ $msgServiceDetails.ALBRuleOrder }}
    {{- end }}
spec:
  ingressClassName: alb
  rules:
  - http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: ssl-redirect
            port: 
              name: use-annotation
{{- end }}
---
{{- end }}